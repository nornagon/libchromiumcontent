version: 2.0
jobs:
  libchromiumcontent-linux-x64-shared:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: x64
          COMPONENT: shared_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH --use-bundled-sccache
      - run:
          name: Build shared library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Check sccache stats after build
          command: script/sccache -s
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
          no_output_timeout: 20m
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent.tar.bz2

  libchromiumcontent-linux-x64-static:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: x64
          COMPONENT: static_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH
      - run:
          name: Build static library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
          no_output_timeout: 20m
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent-static.tar.bz2

  libchromiumcontent-linux-x64-test:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: x64
          COMPONENT: static_library
          DISPLAY: ':99.0'
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH
      - run:
          name: Build static library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Build Tests
          command: script/build -t $TARGET_ARCH -c tests
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
          no_output_timeout: 20m
      - run:
          name: Setup for headless testing
          command: |
            XVFB=/usr/bin/Xvfb
            XVFBARGS="$DISPLAY -ac -screen 0 1024x768x16 +extension RANDR"
            /sbin/start-stop-daemon --start --quiet --background --exec $XVFB -- $XVFBARGS
      - run:
          name: Run Tests
          command: |
            set +e
            script/run_tests --generate_report -t $TARGET_ARCH
      - store_test_results:
          path: test_reports
      - store_artifacts:
          path: test_reports

  libchromiumcontent-linux-ia32-shared:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: ia32
          COMPONENT: shared_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH --use-bundled-sccache
      - run:
          name: Build shared library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Check sccache stats after build
          command: script/sccache -s
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
          no_output_timeout: 20m
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent.tar.bz2

  libchromiumcontent-linux-ia32-static:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: ia32
          COMPONENT: static_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH
      - run:
          name: Build static library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
          no_output_timeout: 20m
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent-static.tar.bz2

  libchromiumcontent-linux-ia32-test:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: ia32
          COMPONENT: static_library
          DISPLAY: ':99.0'
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH
      - run:
          name: Build static library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
          no_output_timeout: 20m
      - run:
          name: Setup for headless testing
          command: |
            XVFB=/usr/bin/Xvfb
            XVFBARGS="$DISPLAY -ac -screen 0 1024x768x16 +extension RANDR"
            /sbin/start-stop-daemon --start --quiet --background --exec $XVFB -- $XVFBARGS
      - run:
          name: Run Tests
          command: |
            set +e
            script/run_tests --generate_report -t $TARGET_ARCH
      - store_test_results:
          path: test_reports
      - store_artifacts:
          path: test_reports          

  libchromiumcontent-linux-arm-shared:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: arm
          COMPONENT: shared_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH --use-bundled-sccache
      - run:
          name: Build mksnapshot
          command: script/build -t $TARGET_ARCH -c native_mksnapshot
      - run:
          name: Build shared library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Check sccache stats after build
          command: script/sccache -s
      - run:
          name: Create shared distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
          no_output_timeout: 20m
      - run:
          name: Create mksnapshot distribution
          command: script/create-dist -t $TARGET_ARCH -c native_mksnapshot
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent.tar.bz2
      - store_artifacts:
          path: native-mksnapshot.tar.bz2

  libchromiumcontent-linux-arm-static:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: arm
          COMPONENT: static_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH
      - run:
          name: Build static library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
          no_output_timeout: 20m
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent-static.tar.bz2

  libchromiumcontent-linux-arm64-shared:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: arm64
          COMPONENT: shared_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH --use-bundled-sccache
      - run:
          name: Build mksnapshot
          command: script/build -t $TARGET_ARCH -c native_mksnapshot
      - run:
          name: Build shared library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Check sccache stats after build
          command: script/sccache -s
      - run:
          name: Create shared distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
          no_output_timeout: 20m
      - run:
          name: Create mksnapshot distribution
          command: script/create-dist -t $TARGET_ARCH -c native_mksnapshot
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent.tar.bz2
      - store_artifacts:
          path: native-mksnapshot.tar.bz2

  libchromiumcontent-linux-arm64-static:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: arm64
          COMPONENT: static_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH
      - run:
          name: Build static library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
          no_output_timeout: 20m
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent-static.tar.bz2

  libchromiumcontent-linux-mips64el-shared:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: mips64el
          COMPONENT: shared_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH --use-bundled-sccache
      - run:
          name: Build shared library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Check sccache stats after build
          command: script/sccache -s
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
          no_output_timeout: 20m
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent.tar.bz2

  libchromiumcontent-linux-mips64el-static:
    docker:
      - image: electronbuilds/libchromiumcontent:0.0.4
        environment:
          TARGET_ARCH: mips64el
          COMPONENT: static_library
    resource_class: 2xlarge
    steps:
      - checkout
      - run:
          name: Bootstrap
          command: script/bootstrap
      - run:
          name: Update
          command: script/update --clean -t $TARGET_ARCH

      - run:
          name: Build static library
          command: script/build -t $TARGET_ARCH -c $COMPONENT
      - run:
          name: Build FFmpeg
          command: script/build -t $TARGET_ARCH -c ffmpeg
      - run:
          name: Create distribution
          command: script/create-dist -t $TARGET_ARCH -c $COMPONENT
          no_output_timeout: 20m
      - run:
          name: Upload to S3
          command: |
            if [[ -z "${LIBCHROMIUMCONTENT_S3_ACCESS_KEY}" ]]; then
              echo "Skipping upload to S3"
            else
              script/upload -t $TARGET_ARCH
            fi
      - store_artifacts:
          path: libchromiumcontent-static.tar.bz2

workflows:
  version: 2
  build-x64:
    jobs:
      - libchromiumcontent-linux-x64-shared
      - libchromiumcontent-linux-x64-static
  build-ia32:
    jobs:
      - libchromiumcontent-linux-ia32-shared
      - libchromiumcontent-linux-ia32-static
  build-arm:
    jobs:
      - libchromiumcontent-linux-arm-shared
      - libchromiumcontent-linux-arm-static
  build-arm64:
    jobs:
      - libchromiumcontent-linux-arm64-shared
      - libchromiumcontent-linux-arm64-static
  nightly-test:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - libchromiumcontent-linux-x64-test
      - libchromiumcontent-linux-ia32-test
